@page "/admin/orders"

@inherits OwningComponentBase<IShopOrderRepo>

<OrderTableComponent TableTitle="Необработанные заказы" Orders="UnshippedOrders" ButtonLabel="Отправить" OrderSelected="ShipOrder" />
<OrderTableComponent TableTitle="Обработанные заказы" Orders="ShippedOrders" ButtonLabel="Сброс" OrderSelected="ResetOrder" />

<button class="btn btn-info" @onclick="@(x => UpdateData())">Обновить</button>

@code {
    public IShopOrderRepo Repo => Service;
    public IEnumerable<Order> AllOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> UnshippedOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> ShippedOrders { get; set; } = Enumerable.Empty<Order>();
    protected override async Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        AllOrders = await Repo.Orders.ToListAsync();
        UnshippedOrders = AllOrders.Where(x => !x.IsShipped);
        ShippedOrders = AllOrders.Where(x => x.IsShipped);
    }
    public void ShipOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);
    private void UpdateOrder(int id, bool shipValue)
    {
        var o = Repo.Orders.FirstOrDefault(x => x.Id == id);
        if (o != null)
        {
            o.IsShipped = shipValue;
            Repo.UpdateOrder(o);
        }
    }
}